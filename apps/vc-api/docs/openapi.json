{
  "openapi": "3.0.0",
  "paths": {
    "/v1/key": {
      "post": {
        "operationId": "KeyController_import",
        "summary": "",
        "description": "Import a key",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KeyPairDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/KeyDescriptionDto" } }
            }
          }
        },
        "tags": ["key"]
      }
    },
    "/v1/key/{keyId}": {
      "get": {
        "operationId": "KeyController_export",
        "parameters": [{ "name": "keyId", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KeyPairDto" } } }
          }
        },
        "tags": ["key"]
      }
    },
    "/v1/did": {
      "post": {
        "operationId": "DIDController_create",
        "summary": "",
        "description": "Generate a new DID",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreateDidOptionsDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateDidResponseDto" } }
            }
          }
        },
        "tags": ["did"]
      }
    },
    "/v1/did/{did}": {
      "get": {
        "operationId": "DIDController_getByDID",
        "summary": "",
        "description": "Retrieve exisiting DID",
        "parameters": [{ "name": "did", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CreateDidResponseDto" } }
            }
          },
          "404": { "description": "" }
        },
        "tags": ["did"]
      }
    },
    "/v1/vc-api/credentials/issue": {
      "post": {
        "operationId": "VcApiController_issueCredential",
        "summary": "",
        "description": "Issues a credential and returns it in the response body. Conforms to https://w3c-ccg.github.io/vc-api/issuer.html",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/IssueCredentialDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/VerifiableCredentialDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/credentials/verify": {
      "post": {
        "operationId": "VcApiController_verifyCredential",
        "summary": "",
        "description": "Verify a credential. Conforms to https://w3c-ccg.github.io/vc-api/#verify-credential",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/VerifyCredentialDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "Verifiable Credential successfully verified",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/VerificationResultDto" } }
            }
          },
          "400": { "description": "Invalid input" }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/presentations/prove/authentication": {
      "post": {
        "operationId": "VcApiController_proveAuthenticationPresentation",
        "summary": "",
        "description": "NON-STANDARD endpoint. Issue a DIDAuth presentation that authenticates a DID.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthenticateDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/VerifiablePresentationDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/presentations/from": {
      "post": {
        "operationId": "VcApiController_presentationFrom",
        "summary": "",
        "description": "Creates a Presentation without Proof by passing in the Presentation Definition, selected Verifiable Credentials",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PresentationDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/presentations/prove": {
      "post": {
        "operationId": "VcApiController_provePresentation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ProvePresentationDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/VerifiablePresentationDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/presentations/verify": {
      "post": {
        "operationId": "VcApiController_verifyPresentation",
        "summary": "",
        "description": "Verify a presentation. Conforms to https://w3c-ccg.github.io/vc-api/#verify-presentation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/VerifyPresentationDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "Verifiable Presentation successfully verified!",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/VerificationResultDto" } }
            }
          },
          "400": { "description": "Invalid or malformed input" }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/exchanges": {
      "post": {
        "operationId": "VcApiController_createExchange",
        "summary": "",
        "description": "NON-STANDARD endpoint. Allows the creation of a new exchange by providing the credential query and interaction endpoints. Similar to https://gataca-io.github.io/vui-core/#/Presentations/post_api_v2_presentations",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ExchangeDefinitionDto" } }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/exchanges/{exchangeId}": {
      "post": {
        "operationId": "VcApiController_initiateExchange",
        "summary": "",
        "description": "Initiates an exchange of information. https://w3c-ccg.github.io/vc-api/#initiate-exchange",
        "parameters": [
          { "name": "exchangeId", "required": true, "in": "path", "schema": { "type": "string" } }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ExchangeResponseDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/exchanges/{exchangeId}/{transactionId}": {
      "put": {
        "operationId": "VcApiController_continueExchange",
        "summary": "",
        "description": "Receives information related to an existing exchange. https://w3c-ccg.github.io/vc-api/#continue-exchange",
        "parameters": [
          { "name": "exchangeId", "required": true, "in": "path", "schema": { "type": "string" } },
          { "name": "transactionId", "required": true, "in": "path", "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/VerifiablePresentationDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "Verifiable Presentation successfully submitted and verified",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ExchangeResponseDto" } }
            }
          },
          "202": {
            "description": "Verifiable Presentation successfully submitted. Further review in progress."
          }
        },
        "tags": ["vc-api"]
      },
      "get": {
        "operationId": "VcApiController_getTransaction",
        "summary": "",
        "description": "NON-STANDARD endpoint. Get exchange transaction by id. Similar to https://identitycache.energyweb.org/api/#/Claims/ClaimController_getByIssuerDid",
        "parameters": [
          { "name": "exchangeId", "required": true, "in": "path", "schema": { "type": "string" } },
          { "name": "transactionId", "required": true, "in": "path", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/GetTransactionDto" } }
            }
          }
        },
        "tags": ["vc-api"]
      }
    },
    "/v1/vc-api/exchanges/{exchangeId}/{transactionId}/review": {
      "post": {
        "operationId": "VcApiController_addSubmissionReview",
        "summary": "",
        "description": "NON-STANDARD endpoint. Update a transaction review. Similar to https://github.com/energywebfoundation/ssi-hub/blob/8b860e7cdae4e1b1aa75afeab8b9df7ab26befbb/src/modules/claim/claim.controller.ts#L80",
        "parameters": [
          { "name": "transactionId", "required": true, "in": "path", "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SubmissionReviewDto" } }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["vc-api"]
      }
    }
  },
  "info": { "title": "VC-API", "description": "Sample VC-API", "version": "0.1", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "KeyPairDto": {
        "type": "object",
        "properties": {
          "privateKey": { "type": "object", "description": "private key JWK" },
          "publicKey": { "type": "object", "description": "public key JWK" }
        },
        "required": ["privateKey", "publicKey"]
      },
      "KeyDescriptionDto": {
        "type": "object",
        "properties": {
          "keyId": { "type": "string", "description": "id of key (for example, JWK thumbprint)" }
        },
        "required": ["keyId"]
      },
      "DidMethod": { "type": "string", "enum": ["key", "ethr"] },
      "CreateDidOptionsDto": {
        "type": "object",
        "properties": {
          "method": {
            "description": "DID Method to create. Must be one of \"key\" or \"ethr\"",
            "$ref": "#/components/schemas/DidMethod"
          },
          "keyId": {
            "type": "string",
            "description": "id of key (for example, JWK thumbprint).\nThis key must be known to the server already.\nIf provided, DID will be created using this key.\nCurrently only supported for did:key."
          }
        },
        "required": ["method"]
      },
      "JsonWebKeyDto": {
        "type": "object",
        "properties": {
          "alg": { "type": "string" },
          "crv": { "type": "string" },
          "e": { "type": "string" },
          "ext": { "type": "boolean" },
          "key_ops": { "type": "array", "items": { "type": "string" } },
          "kid": { "type": "string" },
          "kty": { "type": "string" },
          "n": { "type": "string" },
          "use": { "type": "string" },
          "x": { "type": "string" },
          "y": { "type": "string" }
        },
        "required": ["kty"]
      },
      "VerificationMethodDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "controller": { "type": "string" },
          "publicKeyJwk": { "$ref": "#/components/schemas/JsonWebKeyDto" }
        },
        "required": ["id", "type", "controller"]
      },
      "CreateDidResponseDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "verificationMethod": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/VerificationMethodDto" }
          }
        },
        "required": ["id"]
      },
      "CredentialDto": { "type": "object", "properties": {} },
      "IssueOptionsDto": { "type": "object", "properties": {} },
      "IssueCredentialDto": {
        "type": "object",
        "properties": {
          "credential": { "$ref": "#/components/schemas/CredentialDto" },
          "options": { "$ref": "#/components/schemas/IssueOptionsDto" }
        },
        "required": ["credential", "options"]
      },
      "VerifiableCredentialDto": { "type": "object", "properties": {} },
      "VerifyCredentialDto": { "type": "object", "properties": {} },
      "VerificationResultDto": { "type": "object", "properties": {} },
      "AuthenticateDto": { "type": "object", "properties": {} },
      "VerifiablePresentationDto": { "type": "object", "properties": {} },
      "PresentationDto": { "type": "object", "properties": {} },
      "ProvePresentationDto": { "type": "object", "properties": {} },
      "VerifyPresentationDto": { "type": "object", "properties": {} },
      "ExchangeDefinitionDto": { "type": "object", "properties": {} },
      "ExchangeResponseDto": { "type": "object", "properties": {} },
      "GetTransactionDto": { "type": "object", "properties": {} },
      "SubmissionReviewDto": { "type": "object", "properties": {} }
    }
  }
}
